{
    "window.title": "${rootName}${separator}${dirty}${activeEditorLong}",
    "workbench.editor.openPositioning": "last",
    "workbench.editor.enablePreviewFromQuickOpen": false,
    "workbench.startupEditor": "newUntitledFile",
    "workbench.editor.empty.hint": "hidden",
    // "workbench.editorAssociations": {
    //     "*.drawio": "drawio-vscode.editor"
    // },
    "editor.renderWhitespace": "all",
    "editor.accessibilitySupport": "off",
    "editor.largeFileOptimizations": false,
    "editor.formatOnSave": true,
    "editor.tabSize": 4,
    "editor.detectIndentation": false,
    "files.insertFinalNewline": true,
    "files.trimTrailingWhitespace": true,
    "files.trimFinalNewlines": true,
    // "trailing-spaces.trimOnSave": true,
    "extensions.ignoreRecommendations": false,
    "[clojure]": {},
    "hediet.vscode-drawio.theme": "atlas",
    "diffEditor.ignoreTrimWhitespace": false,
    "[python]": {},
    "linesinfostatusbar.totalDisplayFormat": "Total Lines: %d",
    "hediet.vscode-drawio.resizeImages": null,
    // "terminal.integrated.automationProfile.windows": {},
    "verible-formatter.flagFile": ".verilog_format", //https://marketplace.visualstudio.com/items?itemName=kukdh1.verible-formatter
    "c-cpp-flylint.flexelint.enable": false,
    "c-cpp-flylint.clang.enable": false,
    "c-cpp-flylint.flawfinder.enable": false,
    "c-cpp-flylint.lizard.enable": false,
    "c-cpp-flylint.cppcheck.enable": true,
    "[cpp]": {
        "editor.defaultFormatter": "ms-vscode.cpptools",
        "remove-empty-lines.runOnSave": false
    },
    "[verilog]": {
        "editor.defaultFormatter": "kukdh1.verible-formatter",
        "remove-empty-lines.runOnSave": true,
        "remove-empty-lines.allowedNumberOfEmptyLines": 1 //https://marketplace.visualstudio.com/items?itemName=usernamehw.remove-empty-lines
    },
    "[systemverilog]": {
        "editor.defaultFormatter": "kukdh1.verible-formatter", //https://marketplace.visualstudio.com/items?itemName=kukdh1.verible-formatter
        "remove-empty-lines.runOnSave": true,
        "remove-empty-lines.allowedNumberOfEmptyLines": 1 //https://marketplace.visualstudio.com/items?itemName=usernamehw.remove-empty-lines
    },
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[markdown]": {
        "editor.defaultFormatter": "DavidAnson.vscode-markdownlint" //https://marketplace.visualstudio.com/items?itemName=DavidAnson.vscode-markdownlint
    },
    "[tcl]": {
        "editor.defaultFormatter": "bitwisecook.tcl" //https://marketplace.visualstudio.com/items?itemName=bitwisecook.tcl
    },
    "[toml]": {
        "editor.defaultFormatter": "tamasfe.even-better-toml" //https://marketplace.visualstudio.com/items?itemName=tamasfe.even-better-toml
    },
    "markdown-preview-enhanced.plantumlJarPath": "/home/user/Downloads/plantuml-1.2024.3.jar",
    "markdown.styles": [
        "https://cdn.jsdelivr.net/gh/dhdhagar/vscode-md-preview-light/style.min.css"
    ],
    "markdown-preview-enhanced.pandocMarkdownFlavor": "markdown",
    "markdown-preview-enhanced.mathInlineDelimiters": [
        [
            "$`",
            "`$"
        ]
    ],
    "markdown-preview-enhanced.breakOnSingleNewLine": false,
    "markdown-preview-enhanced.codeBlockTheme": "dark.css",
    "markdown-preview-enhanced.previewTheme": "vue.css",
    "files.associations": {
        "*.sv": "systemverilog",
        "*.v": "systemverilog",
        "*.vh": "systemverilog",
        "*.svh": "systemverilog",
        "Makefile.user": "makefile",
        "Makefile.docker": "makefile",
        "array": "cpp",
        "atomic": "cpp",
        "strstream": "cpp",
        "bit": "cpp",
        "*.tcc": "cpp",
        "cctype": "cpp",
        "chrono": "cpp",
        "clocale": "cpp",
        "cmath": "cpp",
        "codecvt": "cpp",
        "compare": "cpp",
        "complex": "cpp",
        "concepts": "cpp",
        "condition_variable": "cpp",
        "cstdarg": "cpp",
        "cstddef": "cpp",
        "cstdint": "cpp",
        "cstdio": "cpp",
        "cstdlib": "cpp",
        "cstring": "cpp",
        "ctime": "cpp",
        "cwchar": "cpp",
        "cwctype": "cpp",
        "deque": "cpp",
        "forward_list": "cpp",
        "list": "cpp",
        "map": "cpp",
        "set": "cpp",
        "string": "cpp",
        "unordered_map": "cpp",
        "unordered_set": "cpp",
        "vector": "cpp",
        "exception": "cpp",
        "algorithm": "cpp",
        "functional": "cpp",
        "iterator": "cpp",
        "memory": "cpp",
        "memory_resource": "cpp",
        "numeric": "cpp",
        "random": "cpp",
        "ratio": "cpp",
        "string_view": "cpp",
        "system_error": "cpp",
        "tuple": "cpp",
        "type_traits": "cpp",
        "utility": "cpp",
        "fstream": "cpp",
        "initializer_list": "cpp",
        "iomanip": "cpp",
        "iosfwd": "cpp",
        "iostream": "cpp",
        "istream": "cpp",
        "limits": "cpp",
        "mutex": "cpp",
        "new": "cpp",
        "numbers": "cpp",
        "ostream": "cpp",
        "semaphore": "cpp",
        "sstream": "cpp",
        "stdexcept": "cpp",
        "stop_token": "cpp",
        "streambuf": "cpp",
        "thread": "cpp",
        "cinttypes": "cpp",
        "typeinfo": "cpp",
        "*.h-r": "c",
        "future": "cpp"
    },
    "verilog.linting.path": "verible-verilog-lint",
    "evenBetterToml.taplo.configFile.path": ".taplo.toml", //https://taplo.tamasfe.dev/configuration/file.html
    "cSpell.languageSettings": [
        // This one works with Python
        {
            "languageId": "python",
            "includeRegExpList": [
                "/#.*/",
                "/('''|\"\"\")[^\\1]+?\\1/g",
                "strings"
            ]
        },
        // This one works with JavaScript, Typescript, etc
        {
            "languageId": "javascript,typescript",
            "includeRegExpList": [
                "CStyleComment",
                "strings"
            ]
        },
        // Use with cpp or c files
        {
            "languageId": "cpp,c",
            // Turn off compound words, because it is only checking strings.
            "allowCompoundWords": false,
            // Only check comments and strings
            "includeRegExpList": [
                "CStyleComment",
                "string"
            ],
            // Exclude includes, because they are also strings.
            "ignoreRegExpList": [
                "/#include.*/"
            ]
        }
    ],
    "cSpell.language": "en, ru",
    "cSpell.enabled": true,
    "cSpell.words": [
        "cocotb",
        "csim",
        "Efinix",
        "questasim",
        "regif",
        "shls"
    ]
}
